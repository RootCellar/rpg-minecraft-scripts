# General

on script load:
	broadcast "&c[&eRPG Skript&c] &3Loading script..."

on script unload:
	broadcast "&c[&eRPG Skript&c] &3Unloading script..."

on join:
	wait 3 seconds
	send "&c-------- &eMinecraft RPG &c--------" to player
	send "&l&eNew&r&e:" to player

	# Example: send "&3 - <stuff>" to player
	
	send "&3 - Tools and armor will now last longer for Warriors and Rogues" to player
	send "&3 - Rogues now get hungry substantially slower" to player
	send "&3 - Rogues now resist 70 percent of fall damage" to player
	send "&3 - Wizards can now conjure iron golems for 1,500 Mana" to player
	send "&3 - Warriors can now make power attacks with pickaxes, breaking all blocks in a small radius" to player
	send "&3 - Warrior's power attacks now have a cooldown" to player
	send "&3 - Warriors now resist knockback" to player
	send "&3 - Rogues get additional items at random when killing monsters and animals" to player
	
	#send "&3" to player

	send "&c-------- &eMinecraft RPG &c--------" to player
	

on chat:
	set the message to "&6[&8LVL %player's level%&6]&r %message%"
	player has permission "rpg.rogue":
		set the message to "&7[&2Rogue&7]&r %message%"
		# stop trigger
	player has permission "rpg.warrior":
		set the message to "&e[&cWarrior&e]&r %message%"
		# stop trigger
	player has permission "rpg.wizard":
		set the message to "&8[&3Wizard&8]&r %message%"
		# stop trigger
	player has permission "rpg.herobrine":
		set the message to "&0[&4Herobrine&0]&r %message%"
		# stop trigger

function rpgLog(message: text):
	log "%{_message}%" to "rpg/main.log"

function setMaxHealth(player: player):
	set {_newMax} to 10
	{_player} has permission "rpg.warrior":
		set {_newMax} to 20
	else if {_player} has permission "rpg.wizard":
		set {_newMax} to 8
	else if {_player} has permission "rpg.herobrine":
		set {_newMax} to 40
	else:
		set {_newMax} to 10

	if hasImbue({_player}, "Health Boost") is true:
		set {_newMax} to ({_newMax} + 2 * countImbue({_player}, "Health Boost"))

	if {_player}'s maximum health is not {_newMax}:
		set {_player}'s maximum health to {_newMax}
		send "&cYour maximum health has changed to %{_newMax}% hearts" to {_player}

function lastLoreLine(item: item) :: number:
	set {_x} to 1
	loop lore of {_item}:
		set {_x} to {_x} + 1
	return {_x}

function countImbue(player: player, text: text) :: number:
	set {_c} to 0
	if hasLore({_player}'s helmet, {_text}) is true:
		set {_c} to {_c} + 1
	if hasLore({_player}'s chestplate, {_text}) is true:
		set {_c} to {_c} + 1
	if hasLore({_player}'s leggings, {_text}) is true:
		set {_c} to {_c} + 1
	if hasLore({_player}'s boots, {_text}) is true:
		set {_c} to {_c} + 1
	return {_c}

function hasImbue(player: player, text: text) :: boolean:
	if hasLore({_player}'s helmet, {_text}) is true:
		return true
	if hasLore({_player}'s chestplate, {_text}) is true:
		return true
	if hasLore({_player}'s leggings, {_text}) is true:
		return true
	if hasLore({_player}'s boots, {_text}) is true:
		return true
	return false

function hasLore(item: item, text: text) :: boolean:
	loop lore of {_item}:
		if loop-value contains {_text}:
			return true
	return false

function isWearingLightOrLess(player: player) :: boolean:
	hasLore(helmet of {_player}, "light") is false:
		helmet of {_player} is not (leather helmet or air):
			return false
	hasLore(chestplate of {_player}, "light") is false:
		chestplate of {_player} is not (leather chestplate or air):
			return false
	hasLore(leggings of {_player}, "light") is false:
		leggings of {_player} is not (leather leggings or air):
			return false
	hasLore(boots of {_player}, "light") is false:
		boots of {_player} is not (leather boots or air):
			return false
	hasLore(off hand item of {_player}, "light") is false:
		off hand item of {_player} is shield:
			return false
	return true

function isWearingMediumOrLess(player: player) :: boolean:
	if isWearingLightOrLess({_player}) is true:
		return true
	hasLore(helmet of {_player}, "light") is false:
		helmet of {_player} is (diamond helmet or netherite helmet):
			return false
	hasLore(chestplate of {_player}, "light") is false:
		chestplate of {_player} is (diamond chestplate or netherite chestplate):
			return false
	hasLore(leggings of {_player}, "light") is false:
		leggings of {_player} is (diamond leggings or netherite leggings):
			return false
	hasLore(boots of {_player}, "light") is false:
		boots of {_player} is (diamond boots or netherite boots):
			return false
	return true

function isWearingHeavyOrLess(player: player) :: boolean:
	return true

function explodeRadius(block: block, range: number):
	loop all blocks in radius {_range} around {_block}:
		loop-block is not bedrock:
			break loop-block naturally using diamond pickaxe

command /haslore <text>:
	executable by: players
	trigger:
		send "hasImbue: %hasImbue(command executor, arg 1)%"

command /armorclass:
	executable by: players
	trigger:
		send "Light or less: %isWearingLightOrLess(command executor)%"
		send "Medium or less: %isWearingMediumOrLess(command executor)%"
		send "Heavy or less: %isWearingHeavyOrLess(command executor)%"

function arcaneTide():
	{rpgSkript::arcaneTide} is not set:
		set {_x} to a random number between 1 and 1000
		#broadcast {_x}
		{_x} < 7:
			set {rpgSkript::arcaneTide} to now
			arcaneSense("You feel the surrounding energy of Magic become more intense!")
	else:
		if difference between now and {rpgSkript::arcaneTide} is greater than 2 minutes:
			set {_x} to a random number between 1 and 1000
			#broadcast {_x}
			{_x} < 20:
				delete {rpgSkript::arcaneTide}
				arcaneSense("The energy in the air settles...")

function countEntities(mobs: entities) :: number:
	set {_x} to 0
	loop {_mobs::*}:
		set {_x} to {_x} + 1
	return {_x}

on heal:
	entity is not alive:
		cancel the event

function heal(entity: entity, amount: number) :: boolean:
	if {_entity} is not alive:
		return false
	heal {_entity} by {_amount}
	return true

on join:
	setMaxHealth(the player)
	set the player's health to the player's health

every 3 seconds:
	loop all players:
		clear loop-player's scoreboard
		set title of loop-player's scoreboard to "&eInformation"
		set line 15 of loop-player's scoreboard to "&a"
		set line 14 of loop-player's scoreboard to "&3&l   RPG"
		set line 13 of loop-player's scoreboard to "&a"

		loop-player has permission "rpg.rogue":
			set line 9 of loop-player's scoreboard to "Monsters: %countEntities(monsters within 20 meters of loop-player)%"
			set line 8 of loop-player's scoreboard to "Animals: %countEntities(animals within 30 meters of loop-player)%"
			set line 7 of loop-player's scoreboard to "Players: %countEntities(players within 50 meters of loop-player)%"
			set line 6 of loop-player's scoreboard to "Items on Ground: %countEntities(dropped items within 30 meters of loop-player)%"

every 2 seconds:

	arcaneTide()

	loop all players:
		setMaxHealth(loop-player)
		loop-player has permission "rpg.herobrine":
			setupMana(loop-player)
			regenMana(loop-player)
			enable flight for loop-player
		loop-player has permission "rpg.wizard":
			setupMana(loop-player)
			regenMana(loop-player)
		loop-player has permission "rpg.warrior":
			heal(loop-player, 1)
			loop-player's knockback resistance attribute is not 0.7:
				set loop-player's knockback resistance attribute to 0.7
			apply haste 2 without particles to the loop-player for 30 seconds replacing the existing effect
			apply strength 2 without particles to the loop-player for 30 seconds replacing the existing effect
		loop-player has permission "rpg.herobrine":
			heal(loop-player, 2)
			loop-player's knockback resistance attribute is not 0.9:
				set loop-player's knockback resistance attribute to 0.9
			apply haste 6 without particles to the loop-player for 30 seconds replacing the existing effect
			apply strength 4 without particles to the loop-player for 30 seconds replacing the existing effect

on damage:
	attacker is a player:
		attacker has permission "rpg.rogue":
			isWearingLightOrLess(attacker) is true
			set the damage to the damage * 2.0
		attacker has permission "rpg.herobrine":
			set the damage to the damage * 3.0
			
	victim is a player:
		setMaxHealth(the victim)

		victim has permission "rpg.herobrine":
			set the damage to the damage * 0.3
			damage cause is fall:
				cancel the event
			damage cause is burn:
				cancel the event
			damage cause is lava:
				cancel the event
			damage cause is hot floor:
				cancel the event
			damage cause is drowning:
				cancel the event
			damage cause is freeze:
				cancel the event
		victim has permission "rpg.warrior":
			set {_odamage} to the damage
			set {_newdamage} to {_odamage} * 0.65
			set the damage to {_newdamage}
			apply slowness 1 to victim for 4 seconds replacing the existing effect
		victim has permission "rpg.rogue":
			isWearingLightOrLess(victim) is true
			damage cause is fall:
				set the damage to the damage * 0.3
			chance of 45%:
				set the damage to 0
				play sound "entity.player.attack.nodamage" at victim
				send action bar "&2~ ~ DODGE ~ ~" to victim

on target:
	target is a player
	target has permission "rpg.herobrine":
		cancel the event
	target has permission "rpg.rogue":
		isWearingLightOrLess(target) is true
		distance between event-entity and target is greater than 10:
			cancel the event
			stop
		chance of 80%:
			cancel the event

on item damage:
	player has permission "rpg.herobrine":
		cancel the event
	player has permission "rpg.warrior":
		chance of 45%:
			cancel the event
			#send "&cSaved durability"
	player has permission "rpg.rogue":
		chance of 25%:
			cancel the event
			#send "&2Saved durability"

# Warrior

on right click:
	player has permission "rpg.warrior"

	set {_didHit} to false
	set {_can_power_attack} to false
	
	if {rpgSkript::%player%::powerattack_time} is not set:
		set {_can_power_attack} to true
	if difference between now and {rpgSkript::%player%::powerattack_time} is more than 4 seconds:
		set {_can_power_attack} to true

	if {_can_power_attack} is true:
		player is holding a sword:
			loop all monsters in radius 5 around player:
				set {_didHit} to true
				apply slowness 3 to loop-monster for 7 seconds replacing the existing effect
				damage loop-entity by 3
				set {_vec} to normalized vector between player and loop-entity
				push loop-entity {_vec} with force 0.9
				push loop-entity upwards with force 0.6
				
		player is holding an axe:
			set {_loc} to the location 2 meters below and 3 meters horizontally behind the player
			set {_vec} to normalized vector between {_loc} and player
			loop all monsters in radius 5 around player:
				set {_didHit} to true
				apply slowness 3 to loop-monster for 7 seconds replacing the existing effect
				damage loop-entity by 2
				push loop-entity {_vec} with force 1.2
		
		player is holding a pickaxe:
			distance between player and player's targeted block is less than 5:
				create an explosion with force 0 at player's targeted block
				loop all blocks in radius 2 around player's targeted block:
					loop-block is not bedrock:
						set {_didHit} to true
						break loop-block naturally using player's held item

		if {_didHit} is true:
			set {rpgSkript::%player%::powerattack_time} to now
			apply slowness 3 to player for 4 seconds replacing the existing effect
			send action bar "&c&lPOWER ATTACK" to the player
				
	else:
		send action bar "&cYour power attack is still on cooldown!" to the player

# Rogue

on death of a monster:
	attacker is a player
	attacker has permission "rpg.rogue"
	set {_x} to a random number between 0 and 1000
	if {_x} <= 350:
		add 3 arrows to the drops
	if {_x} <= 80:
		add 1 raw gold to the drops
	if {_x} <= 45:
		add 1 diamond to the drops

on death of an animal:
	attacker is a player
	attacker has permission "rpg.rogue"
	set {_x} to a random number between 0 and 1000
	if {_x} < 80:
		add 2 leather to the drops

on death of a player:
	if the victim has permission "rpg.rogue":
		keep the items
		clear drops
		send "&aYou may have died, but they'll never get your items!" to the victim

on sprint toggle:
	player has permission "rpg.rogue"
	player is not sprinting:
		isWearingLightOrLess(player) is true
		apply swiftness 2 without particles to the player for 600 seconds replacing the existing effect
		apply jump boost 2 without particles to the player for 600 seconds replacing the existing effect
	player is sprinting:
		remove swiftness from the player
		remove jump boost from the player

on sneak toggle:
	player has permission "rpg.rogue"
	player is not sneaking:
		isWearingLightOrLess(player) is true
		light level at the player is less than 11
		apply invisibility without particles to the player for 600 seconds replacing the existing effect
	player is sneaking:
		remove invisibility from the player

on hunger meter change:
	player has permission "rpg.rogue"
	if {rpgSkript::%player%::eating} is true:
		set {rpgSkript::%player%::eating} to false
		stop
	else:
		chance of 80%:
			cancel the event

on consume:
	set {rpgSkript::%player%::eating} to true

# Herobrine?

on death of a player:
	if the victim has permission "rpg.herobrine":
		keep the items and experience
		clear drops
		send "&7Using your dark powers, you vanish!" to the victim
		play sound "entity.ender_dragon.death" with pitch 0.5 at victim

every 1 seconds:
	loop all players:
		loop-player has permission "rpg.herobrine"
		sunlight level at the loop-player is greater than 10
		time in world of loop-player is not between 19:00 and 5:00
		ignite the loop-player for 5 seconds
		send action bar "&4The daylight burns!" to loop-player
		damage loop-player by 12

on hunger meter change:
	player has permission "rpg.herobrine"
	if {rpgSkript::%player%::filling_hunger} is true:
		delete {rpgSkript::%player%::filling_hunger}
		stop trigger
	else if the player's hunger meter is less than 10:
		set {rpgSkript::%player%::filling_hunger} to true
		set the player's hunger meter to 10

on sprint toggle:
	player has permission "rpg.herobrine"
	player is not sprinting:
		apply swiftness 4 without particles to the player for 600 seconds replacing the existing effect
		apply jump boost 4 without particles to the player for 600 seconds replacing the existing effect
	player is sprinting:
		remove swiftness from the player
		remove jump boost from the player

on sneak toggle:
	player has permission "rpg.herobrine"
	player is not sneaking:
		apply invisibility without particles to the player for 600 seconds replacing the existing effect
	player is sneaking:
		remove invisibility from the player

on jump:
	entity is a player
	player has permission "rpg.herobrine":
		player is sprinting
		push the player horizontally forward with force 1.5

# Wizard

on place of lightning rod:
	add event-block to {rpgSkript::lightning_rod::*}
	rpgLog("%player% placed lightning rod in %world% at %location of block%")
	send "&dThis lightning rod will catch lightning from magic as well!" to event-player

on break of lightning rod:
	remove event-block from {rpgSkript::lightning_rod::*}
	rpgLog("%player% broke lightning rod in %world% at %location of block%")

function isLightningRodWithinRangeOf(loc: location, range: number, strike: boolean=false) :: boolean:
	loop blocks in {rpgSkript::lightning_rod::*}:
		if loop-block is not lightning rod:
			remove loop-block from {rpgSkript::lightning_rod::*}
			rpgLog("lightning rod was listed at %{_loc}%, but block was not actually a lightning rod")
		else if loop-block is within {_range} meters of {_loc}:
			if {_strike} is true:
				create lightning effect at loop-block
			return true
		return false

function setupMana(player: player):
	if {rpgSkript::%{_player}%::mana} is not set:
		set {rpgSkript::%{_player}%::mana} to 0
	if {rpgSkript::%{_player}%::maxMana} is not set:
		set {rpgSkript::%{_player}%::maxMana} to 0

	set {_newMax} to 0
	if {_player} has permission "rpg.herobrine":
		set {_newMax} to (level of {_player}) * 45
	else if {_player} has permission "rpg.wizard":
		if isWearingLightOrLess({_player}) is true:
			set {_newMax} to (level of {_player}) * 12
		else if isWearingMediumOrLess({_player}) is true:
			set {_newMax} to (level of {_player}) * 8
		else:
			set {_newMax} to (level of {_player}) * 1.5

	if hasImbue({_player}, "Mana Boost") is true:
		set {_newMax} to {_newMax} + 0.25 * {_newMax} * countImbue({_player}, "Mana Boost")
		
	if {_newMax} is not {rpgSkript::%{_player}%::maxMana}:
		set {rpgSkript::%{_player}%::maxMana} to {_newMax}
		send "&dYour maximum mana has changed to %{_newMax}%" to {_player}

function checkMana(player: player):
	setupMana({_player})
	if {rpgSkript::%{_player}%::mana} > {rpgSkript::%{_player}%::maxMana}:
		set {rpgSkript::%{_player}%::mana} to {rpgSkript::%{_player}%::maxMana}
	if {rpgSkript::%{_player}%::mana} < 0:
		set {rpgSkript::%{_player}%::mana} to 0

function regenMana(player: player):
	if {rpgSkript::%{_player}%::mana} is not set:
		setupMana({_player})
	if {rpgSkript::%{_player}%::maxMana} is not set:
		setupMana({_player})

	set {_add} to 0
	if {_player} has permission "rpg.herobrine":
		set {_add} to {rpgSkript::%{_player}%::maxMana} / 100
	else if {_player} has permission "rpg.wizard":
		if isWearingLightOrLess({_player}) is true:
			set {_add} to {rpgSkript::%{_player}%::maxMana} / 40
		else if isWearingMediumOrLess({_player}) is true:
			set {_add} to {rpgSkript::%{_player}%::maxMana} / 70
	
	addMana( {_player}, {_add} )

function addMana(player: player, amount: number):
	set {_before} to {rpgSkript::%{_player}%::mana}
	set {rpgSkript::%{_player}%::mana} to {rpgSkript::%{_player}%::mana} + {_amount}
	checkMana({_player})
	if abs( {rpgSkript::%{_player}%::mana} - {_before} ) > 0.01:
		displayMana({_player})

function subMana(player: player, amount: number) :: boolean:
	if {rpgSkript::%{_player}%::mana} is not set:
		return false
	if hasMana({_player}, {_amount}) is true:
		set {rpgSkript::%{_player}%::mana} to {rpgSkript::%{_player}%::mana} - {_amount}
		checkMana({_player})
		displayMana({_player})
		return true
	else:
		return false

function hasMana(player: player, amount: number) :: boolean:
	send "&3Mana: Have %{rpgSkript::%{_player}%::mana}%, Need %{_amount}%" to {_player}
	if {rpgSkript::%{_player}%::mana} - {_amount} > -0.01:
		return true
	return false

function displayMana(player: player):
	set {_dispM} to {rpgSkript::%{_player}%::mana}
	if {_dispM} < 0:
		set {_dispM} to 0
	send action bar "&3Mana: %{_dispM}% / %{rpgSkript::%{_player}%::maxMana}%" to {_player}

function hasResources(player: player, mana: number, items: items) :: boolean:
	send "&3Items - Need: %{_items::*}%" to {_player}
	{_player} has {_items::*}:
		hasMana({_player}, {_mana}) is true:
			return true
	return false

function takeResources(player: player, mana: number, items: items) :: boolean:
	if hasResources({_player}, {_mana}, {_items}) is true:
		remove {_items::*} from {_player}
		subMana({_player}, {_amount})
		return true
	return false

function arcaneSense(message: text):
	loop all players:
		loop-player has permission "rpg.wizard":
			send "&d%{_message}%" to loop-player


on death of a player:
    if the victim has permission "rpg.wizard":
        keep the experience
        send "&dYou use your magic powers to keep your experience!" to the victim		

command /imbue <text>:
	description: Imbue an item with powerful magic properties
	executable by: players
	trigger:
		player has permission "rpg.wizard"
		if subMana(player, 1000) is false:
			send "&cYou do not have enough mana to imbue an item with magic!"
			stop
		if arg 1 is "health":
			set {_items::*} to 64 glowstone dust and 96 nether wart
			player has {_items::*}:
				remove {_items::*} from player
				set line lastLoreLine(player's held item) of (player's held item)'s lore to "&cHealth Boost"
				send "&dYou imbue the item in your hand with Health Boost!"
			else:
				send "&cYou do not have the required items for that property! Required: %{_items::*}%"
				stop
		if arg 1 is "mana":
			set {_items::*} to 4 diamond and 12 gold ingot
			player has {_items::*}:
				remove {_items::*} from player
				set line lastLoreLine(player's held item) of (player's held item)'s lore to "&3Mana Boost"
				send "&dYou imbue the item in your hand with Mana Boost!"
			else:
				send "&cYou do not have the required items for that property! Required: %{_items::*}%"
				stop
		else:
			send "&cThat is not a valid property!"
			stop

command /arcane <text>:
	description: Send a message to be magically received by wizards
	permission: rpg.control
	permission message: You do not have permission for that command
	trigger:
		arcaneSense(arg 1)

options:
	#chat prefix
	p: &a[Send]
command /send <player>:
	description: Magically send what you are holding to another player!
	permission: rpg.wizard
	permission message: You cannot use magic!
	executable by: players
	trigger:
		if subMana(command executor, 10) is false:
			message "&cYou do not have enough Mana!"
			stop
		set {_senditem} to held item of player
		{_senditem} is not air
		if arg 1 has enough space for {_senditem}:
			remove {_senditem} from player
			give {_senditem} to arg 1
			message "&dSent %{_senditem}% to %arg 1%"
			send "&a[Send] %player% Sent %{_senditem}% to %arg 1%" to console
			send "&dReceived %{_senditem}% from %player%" to arg 1
			delete {_senditem}
		else:
			message "&d%arg 1% does not have enough inventory space!"
			stop

command /remember <text>:
	description: Remember your current location, to recall it later
	permission: rpg.wizard
	permission message: You cannot use magic!
	executable by: players
	trigger:
		if subMana(command executor, 5) is false:
			message "&cYou do not have enough Mana!"
			stop
		if {rpgSkript::%command executor%::memory::%arg 1%} is set:
			message "&cYou already know a location by that name!"
			stop
		set {rpgSkript::%command executor%::memory::%arg 1%} to command executor's location
		message "&dYou take note of your surroundings, so that you may magically return later..."

command /forget <text>:
	description: Forget a location
	permission: rpg.wizard
	permission message: You cannot use magic!
	executable by: players
	trigger:
		delete {rpgSkript::%command executor%::memory::%arg 1%}
		message "&dYou remove the location from memory..."

command /recall <text>:
	description: Teleport to a location that you remember
	permission: rpg.wizard
	permission message: You cannot use magic!
	executable by: players
	trigger:
		if {rpgSkript::%command executor%::memory::%arg 1%} is set:
			if subMana(command executor, 130) is false:
				message "&cYou do not have enough Mana!"
				stop
			play sound "entity.enderman.teleport" at command executor
			show smoke at command executor
			teleport command executor to {rpgSkript::%command executor%::memory::%arg 1%}
			show smoke at command executor
			play sound "entity.enderman.teleport" at command executor
			message "&dYou recall a location from memory!"
		else:
			message "&dYou do not remember any such location"

command /sendnear <text>:
	description: Teleport nearby players to a location that you remember
	permission: rpg.wizard
	permission message: You cannot use magic!
	executable by: players
	trigger:
		if {rpgSkript::%command executor%::memory::%arg 1%} is set:
			if subMana(command executor, 80) is false:
				message "&cYou do not have enough Mana!"
				stop
			loop entities in radius 7 of player:
				loop-entity is a player
				loop-entity is not command executor
				play sound "entity.enderman.teleport" at loop-entity
				show smoke at loop-entity
				teleport loop-entity to {rpgSkript::%command executor%::memory::%arg 1%}
			message "&dYou send nearby players to a location that you remember!"
		else:
			message "&dYou do not remember any such location"

command /memories:
	description: List locations that you remember
	permission: rpg.wizard
	permission message: You cannot use magic!
	executable by: players
	trigger:
		loop {rpgSkript::%command executor%::memory::*}:
			message "%loop-index%"

command /pocket:
	description: Open your enderchest
	permission: rpg.wizard
	permission message: You cannot use magic!
	executable by: players
	trigger:
		if subMana(command executor, 20) is false:
			send "&cYou do not have enough Mana to cast the pocket spell!" to command executor
			stop
		send "&dYou open a rift and reach into your enderchest!" to command executor
		make command executor run command "/enderchest" as op

command /cast <text>:
	description: Cast a spell
	permission: rpg.wizard
	permission message: You cannot use magic!
	executable by: players
	trigger:
		if arg 1 is "conjure":
			if subMana(command executor, 1500) is false:
				send "&cYou do not have enough Mana to cast the conjure spell!" to command executor
				stop
			send "&dYou whisper, and an iron golem materializes into existence!" to command executor
			spawn 1 iron golem at the location 1 meter above command executor's targeted block
		if arg 1 is "safe":
			if subMana(command executor, 20) is false:
				send "&cYou do not have enough Mana to cast the magic safe spell!" to command executor
				stop
			set {_inv} to chest inventory with 6 rows named "&dSafe"
			send "&dYou open a rift and reach into a magical safe!" to command executor
			play sound "entity.enderman.teleport" at command executor
			loop 6*9 times:
				set slot (loop-value)-1 of {_inv} to {rpgSkript::%player%::safe::%loop-value%}
			open {_inv} to player

on inventory close:
	if event-inventory's name is "&dSafe":
		loop 6*9 times:
			set {rpgSkript::%player%::safe::%loop-value%} to slot (loop-value)-1 of event-inventory

on right click with stick:
	player has permission "rpg.wizard"
	if subMana(event-player, 5) is false:
		send "&cYou do not have enough Mana to cast the firebolt spell!" to event-player
		stop
	send "&dYou hurl a mote of fire!" to event-player
	play sound "item.firecharge.use" at event-player
	make player run command "/fireball" as op
	add 2 experience to the player
	show mob spawner flames at (the location 1 block above the player's location)

on right click with gunpowder:
	player has permission "rpg.wizard"
	if subMana(event-player, 100) is false:
		send "&cYou do not have enough Mana to cast the explosion spell!" to event-player
		stop
	send "&dYou speak words of arcane significance and create a powerful explosion!" to event-player
	play sound "item.firecharge.use" at event-player
	loop all entities in radius 8 around (event-player's targeted block):
		loop-entity is not a dropped item
		damage loop-entity by 28
		add 4 experience to the player
	create an explosion with force 5 at the event-player's targeted block
	add 10 experience to the player
	show mob spawner flames at (the location 1 block above the player's location)

on right click with nether quartz:
	player has permission "rpg.wizard"
	if subMana(event-player, 200) is false:
		send "&cYou do not have enough Mana to cast the smite spell!" to event-player
		stop
	send "&dYou strike monsters with lightning!" to event-player
	play sound "entity.player.breath" with pitch 0.7 at player
	loop all entities in radius 12 around (event-player's targeted block):
		loop-entity is not a dropped item
		loop-entity is not a player
		loop-entity's health is greater than 0
		create lightning effect at the loop-entity
		damage loop-entity by 8
		add 5 experience to the player
	add 14 experience to the player
	show mob spawner flames at (the location 1 block above the player's location)

on right click with magma cream:
	player has permission "rpg.wizard"
	if subMana(event-player, 180) is false:
		send "&cYou do not have enough Mana to cast the shatter spell!" to event-player
		stop
	send "&dYou tear at the fabric of reality!" to event-player
	play sound "item.firecharge.use" at event-player
	loop all blocks in radius 15 around (event-player's targeted block):
		chance of 0.3%:
			loop-block is not air
			create an explosion with force 3 at the loop-block
			wait 1 ticks
	#create an explosion with force 5 at the event-player's targeted block
	add 10 experience to the player
	show mob spawner flames at (the location 1 block above the player's location)

on right click with flint:
	player has permission "rpg.wizard"
	if subMana(event-player, 18) is false:
		send "&cYou do not have enough Mana to cast the ignite spell!" to event-player
		stop
	send "&dYou draw energy from the item in your hand and light creatures on fire!" to event-player
	play sound "item.flintandsteel.use" at event-player
	loop all entities in radius 13 around (event-player's targeted block):
		loop-entity is not a dropped item
		loop-entity is not player
		ignite loop-entity for 10 seconds
		show mob spawner flames at (the location 1 block above the loop-entity's location)
		add 1 experience to the player
	add 4 experience to the player
	show mob spawner flames at (the location 1 block above the player's location)

on right click with blaze rod:
	player has permission "rpg.wizard"
	if subMana(event-player, 1000) is false:
		send "&cYou do not have enough Mana to cast the devastating blast spell!" to event-player
		stop
	send "&dYou shout, and your thunderous words are met with an equally powerful blast of destruction!" to event-player
	set {_block} to event-player's targeted block
	play sound "item.firecharge.use" at event-player
	loop all entities in radius 50 around {_block}:
		loop-entity is not a dropped item
		loop-entity is not the player
		set {_vec} to the vector between {_block} and the loop-entity
		set {_vec} to normalized {_vec}
		push loop-entity {_vec} with force 2
		damage loop-entity by 80
		add 16 experience to the player
	create an explosion with force 0 at {_block}
	explodeRadius({_block}, 13)
	wait 5 ticks
	create an explosion with force 38 at {_block}
	add 32 experience to the player
	show mob spawner flames at (the location 1 block above the player's location)
	create a fake explosion at the player

on right click with diamond:
	player has permission "rpg.wizard"
	if subMana(event-player, 300) is false:
		send "&cYou do not have enough Mana to cast the lightning spell!" to event-player
		stop
	send "&dYou conjure an enormous bolt of lighting from the heavens!" to event-player
	if isLightningRodWithinRangeOf(location of event-player's targeted block, 150, true) is true:
		send "&dYou sense that your lightning as been absorbed by a lightning rod!"
		stop
	loop all entities in radius 22 around (event-player's targeted block):
		loop-entity is not a dropped item
		loop-entity is not the player
		damage loop-entity by 50
		add 12 experience to the player
	create lightning effect at the event-player's targeted block
	create an explosion with force 12 at the event-player's targeted block
	add 24 experience to the player
	play sound "entity.player.breath" with pitch 0.7 at player

on right click with feather:
	player has permission "rpg.wizard"
	set {_t} to targeted entity of player
	{_t} is a player:
		if subMana(event-player, 90) is false:
			send "&cYou do not have enough Mana to cast the heal other spell!" to event-player
			stop
		heal({_t}, 3)
		send "&dYou heal %{_t}%!" to event-player
		send "&dYou are healed!" to {_t}
		play sound "entity.player.levelup" with pitch 1.5 at {_t}
		stop
	if subMana(event-player, 90) is false:
		send "&cYou do not have enough Mana to cast the heal spell!" to event-player
		stop
	heal(event-player, 3)
	send "&dYou are healed!" to event-player
	play sound "entity.player.levelup" with pitch 1.5 at event-player

on right click with amethyst shard:
	player has permission "rpg.wizard"
	set {_loc} to event-player's targeted block
	set {_loc} to location 1 meter above {_loc}
	set pitch of {_loc} to pitch of event-player
	set yaw of {_loc} to yaw of event-player

	set {_canTp} to true
	if block at {_loc} is not air:
		set {_canTp} to false
	if block 1 meter above {_loc} is not air:
		set {_canTp} to false
	if {_canTp} is false:
		send "&cCannot blink there!" to event-player
		stop
		
	if subMana(event-player, 35) is false:
		send "&cYou do not have enough Mana to cast the blink spell!" to event-player
		stop
	send "&dYou blink to your target location!" to event-player
	play sound "entity.enderman.teleport" at event-player
	teleport event-player to {_loc}
	add 1 experience to the event-player
	wait 2 ticks
	play sound "entity.enderman.teleport" at event-player

on right click with clay ball:
	player has permission "rpg.wizard"
	if subMana(event-player, 50) is false:
		send "&cYou do not have enough Mana to cast the move monsters spell!" to event-player
		stop
	send "&dSummoned nearby monsters near where you are looking!" to event-player
	set {_loc} to event-player's targeted block
	loop all entities in radius 60 around (event-player's targeted block):
		loop-entity is not a dropped item
		loop-entity is not a player
		teleport loop-entity to location 1 meter above {_loc}
		add 1 experience to the player
	add 2 experience to the player
	play sound "entity.player.breath" with pitch 0.7 at player

on right click with sugar:
	player has permission "rpg.wizard"
	if subMana(event-player, 30) is false:
		send "&cYou do not have enough Mana to cast the move items spell!" to event-player
		stop
	send "&dSummoned nearby dropped items near where you are looking!" to event-player
	set {_loc} to event-player's targeted block
	loop all entities in radius 80 around (event-player's targeted block):
		loop-entity is a dropped item
		teleport loop-entity to location 1 meter above {_loc}
		add 1 experience to the player
	add 2 experience to the player
	play sound "entity.player.breath" with pitch 0.7 at player

on right click with wheat:
	player has permission "rpg.wizard"
	if subMana(event-player, 200) is false:
		send "&cYou do not have enough Mana to cast the harvest spell!" to event-player
		stop
	send "&dYou wave your hands and your crops have been magically harvested!" to event-player
	loop blocks in radius 50 of player:
		set {_loc} to location of loop-block
		loop-block is wheat:
			break loop-block naturally
			set loop-block to wheat
			wait 2 ticks
		loop-block is carrot plant:
			break loop-block naturally
			set loop-block to carrot plant
			wait 2 ticks
		loop-block is potato plant:
			break loop-block naturally
			set loop-block to potato plant
			wait 2 ticks
		loop-block is nether wart plant:
			break loop-block naturally
			set loop-block to nether wart plant
			wait 2 ticks
		loop-block is melon:
			break loop-block naturally
			wait 2 ticks
		loop-block is pumpkin:
			break loop-block naturally
			wait 2 ticks
		loop-block is bamboo:
			block 1 meter below loop-block is bamboo
			break loop-block naturally
			wait 2 ticks
		loop-block is sugar cane:
			block 1 meter below loop-block is sugar cane
			break loop-block naturally
			wait 2 ticks
		loop-block is sweet berry bush:
			loop-block's age is 3
			set loop-block's age to 1
			drop 3 sweet berry at {_loc}
			wait 2 ticks
